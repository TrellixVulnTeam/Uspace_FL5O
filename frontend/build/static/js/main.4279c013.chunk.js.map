{"version":3,"sources":["Signup.js","App.js","reportWebVitals.js","setupFirebase.js","index.js"],"names":["uiConfig","signInFlow","signInOptions","firebase","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","authResult","a","userInfo","additionalUserInfo","isNewUser","providerId","user","sendEmailVerification","console","log","signOut","then","catch","Signup","useState","setUser","useEffect","currentUser","onAuthStateChanged","displayName","email","onClick","firebaseAuth","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAIIA,EAAW,CACbC,WAAY,QACZC,cAAe,CACbC,IAASC,KAAKC,kBAAkBC,YAChCH,IAASC,KAAKG,mBAAmBD,aAEnCE,UAAW,CACTC,4BAA4B,WAAD,4BAAE,WAAOC,GAAP,eAAAC,EAAA,2DACrBC,EAAWF,EAAWG,oBACfC,WAAqC,aAAxBF,EAASG,WAFR,0CAIjBL,EAAWM,KAAKC,wBAJC,OAKvBC,QAAQC,IAAI,qBALW,gDAOvBD,QAAQC,IAAR,MAPuB,kCAUpB,GAVoB,yDAAF,mDAAC,KAe1BC,EAAU,WACdjB,IACGC,OACAgB,UACAC,MAAK,WACJH,QAAQC,IAAI,+BAEbG,OAAM,WACLJ,QAAQC,IAAI,wBAsCHI,EAlCA,WACb,MAAwBC,mBAAS,MAAjC,mBAAOR,EAAP,KAAaS,EAAb,KAaA,OAXAC,qBAAU,WAEKvB,IAASC,OAAOuB,YAI7B,OAHqBxB,IAASC,OAAOwB,oBAAmB,SAACZ,GACvDS,EAAQT,SAKZE,QAAQC,IAAI,OAAQH,GAEhBA,EAEA,mCACE,0CACYA,EAAKa,YADjB,IAC8B,uBAC5B,gCAAQb,EAAKc,QAFf,IAE8B,uBAC5B,wBAAQC,QAASX,EAAjB,2BAMJ,qCACE,qDACA,cAAC,IAAD,CAAmBpB,SAAUA,EAAUgC,aAAc7B,IAASC,aCnDvD6B,MAXf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,mDACA,cAAC,EAAD,UCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,mBCQdjC,IAASwC,cAXc,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,uDACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKJhD,EAAf,ECXAiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.4279c013.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport StyleFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\nvar uiConfig = {\n  signInFlow: \"popup\",\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: async (authResult) => {\n      const userInfo = authResult.additionalUserInfo;\n      if (userInfo.isNewUser && userInfo.providerId === \"password\") {\n        try {\n          await authResult.user.sendEmailVerification();\n          console.log(\"Check your email.\");\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      return false;\n    },\n  },\n};\n\nconst signOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(function () {\n      console.log(\"Successufully Signed out\");\n    })\n    .catch(function () {\n      console.log(\"Error Signed out\");\n    });\n};\n\nconst Signup = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    const user = firebase.auth().currentUser;\n    const authObserver = firebase.auth().onAuthStateChanged((user) => {\n      setUser(user);\n    });\n    return authObserver;\n  });\n\n  console.log(\"user\", user);\n\n  if (user) {\n    return (\n      <>\n        <p>\n          Welcome, {user.displayName} <br />\n          <small>{user.email}</small> <br />\n          <button onClick={signOut}>Sign out</button>\n        </p>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <div>Sign up / Register</div>\n        <StyleFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n      </>\n    );\n  }\n};\n\nexport default Signup;\n","import React from 'react';\nimport './App.css';\nimport Signup from './Signup';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Shopping platform</h2>\n        <Signup />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app'\nimport 'firebase/auth';\nimport 'firebase/analytics';\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCa2k3GG2PSzfrIHoS9ESEue4eo2gB_8WA\",\n    authDomain: \"mobileshop-a37e2.firebaseapp.com\",\n    databaseURL: \"https://mobileshop-a37e2-default-rtdb.firebaseio.com\",\n    projectId: \"mobileshop-a37e2\",\n    storageBucket: \"mobileshop-a37e2.appspot.com\",\n    messagingSenderId: \"456081610942\",\n    appId: \"1:456081610942:web:3e91bc7013c1866048e6ef\",\n    measurementId: \"G-HE919095YF\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './setupFirebase';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}